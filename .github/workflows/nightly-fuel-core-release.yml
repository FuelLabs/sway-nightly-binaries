name: Fuel Core Release (nightly)

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      date:
        required: true
        type: string
      release_name:
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  REGISTRY: ghcr.io
  RUST_VERSION: 1.81.0

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    name: Prepare release
    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}
      zip_name: ${{ steps.set-name.outputs.zip_name }}
      commit_hash: ${{ steps.set-commit-hash.outputs.commit_hash }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: FuelLabs/fuel-core
          fetch-depth: 0

      - name: Set commit hash
        id: set-commit-hash
        run: |
          echo "::set-output name=commit_hash::$(git rev-parse --short=10 HEAD)"

      - name: Set tag
        id: set-tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          # trim v
          LATEST_TAG="${LATEST_TAG#v}"
          echo "::set-output name=tag::$LATEST_TAG"

      - name: Set name
        id: set-name
        run: |
          NAME=fuel-core-${{ steps.set-tag.outputs.tag }}+nightly.${{ inputs.date }}.${{ steps.set-commit-hash.outputs.commit_hash }}
          echo "::set-output name=zip_name::$NAME"
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          path: scripts

  publish-fuel-core-binary:
    name: Release fuel-core binaries
    runs-on: ${{ matrix.job.os }}
    # Only do this job if publishing a release
    needs: prepare-release
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        job:
          - os: ubuntu-latest
            platform: linux
            target: x86_64-unknown-linux-gnu
            cross_image: x86_64-linux-gnu
          - os: ubuntu-latest
            platform: linux-arm
            target: aarch64-unknown-linux-gnu
            cross_image: aarch64-linux-gnu
          - os: macos-latest
            platform: darwin
            target: x86_64-apple-darwin
          - os: macos-latest
            platform: darwin-arm
            target: aarch64-apple-darwin
    steps:
      - name: Checkout this repo (action path)
        uses: actions/checkout@v3

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: fuellabs/fuel-core
          path: sources

      - name: Setup cross build environment
        uses: ./.github/actions/setup-cross-build
        with:
          target: ${{ matrix.job.target }}
          cross_image: ${{ matrix.job.cross_image }}
          os: ${{ matrix.job.os }}
          rust_version: ${{ env.RUST_VERSION }}

      - name: Install cargo-edit
        working-directory: sources
        run: cargo install cargo-edit

      - name: Bump patch version and add nightly pre-release tag
        working-directory: sources
        run: |
          cargo set-version --metadata "nightly.${{ inputs.date }}.${{ needs.prepare-release.outputs.commit_hash }}"

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true
          key: '${{ matrix.job.target }}'

      - name: Install cross
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cross
          cache-key: '${{ matrix.job.target }}'

      - name: Build fuel-core
        working-directory: sources
        run: |
          cross build --profile=release --target ${{ matrix.job.target }} --features "production" -p fuel-core-bin

      - name: Strip release binary linux x86_64
        if: matrix.job.platform == 'linux'
        working-directory: sources
        run: strip "target/${{ matrix.job.target }}/release/fuel-core"

      - name: Strip release binary aarch64-linux-gnu
        if: matrix.job.target == 'aarch64-unknown-linux-gnu'
        working-directory: sources
        run: |
          docker run --rm -v \
          "$PWD/target:/target:Z" \
          aarch64-linux-gnu:latest \
          aarch64-linux-gnu-strip \
          /target/aarch64-unknown-linux-gnu/release/fuel-core

      - name: Strip release binary mac
        if: matrix.job.os == 'macos-latest'
        working-directory: sources
        run: strip -x "target/${{ matrix.job.target }}/release/fuel-core"

      - name: Prepare Binary Artifact
        env:
          PLATFORM_NAME: ${{ matrix.job.platform }}
          TARGET: ${{ matrix.job.target }}
        working-directory: sources
        run: |
          ARTIFACT="${{ needs.prepare-release.outputs.zip_name }}-${{ env.TARGET }}"
          ZIP_FILE_NAME="$ARTIFACT.tar.gz"
          echo "ZIP_FILE_NAME=$ZIP_FILE_NAME" >> $GITHUB_ENV
          # create zip file
          mkdir -pv "$ARTIFACT"
          cp "target/${{ matrix.job.target }}/release/fuel-core" "$ARTIFACT"
          tar -czvf "$ZIP_FILE_NAME" "$ARTIFACT"

      - name: Upload Binary Artifact
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          files:
            ${{ env.ZIP_FILE_NAME }}
          tag_name: ${{ inputs.release_name }}
