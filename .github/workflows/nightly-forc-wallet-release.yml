name: Forc Wallet Release (nightly)

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      date:
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    name: Prepare release
    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}
      zip_name: ${{ steps.set-name.outputs.zip_name }}
      commit_hash: ${{ steps.set-commit-hash.outputs.commit_hash }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          repository: FuelLabs/forc-wallet
          fetch-depth: 0

      - name: Set commit hash
        id: set-commit-hash
        run: |
          echo "::set-output name=commit_hash::$(git rev-parse --short=10 HEAD)"

      - name: Set tag
        id: set-tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          # trim v
          LATEST_TAG="${LATEST_TAG#v}"
          echo "::set-output name=tag::$LATEST_TAG"

      - name: Set name
        id: set-name
        run: |
          NAME=forc-wallet-${{ steps.set-tag.outputs.tag }}+nightly.${{ inputs.date }}.${{ steps.set-commit-hash.outputs.commit_hash }}
          echo "::set-output name=zip_name::$NAME"

  build-release:
    name: Release forc-wallet binaries
    runs-on: ${{ matrix.job.os }}
    needs: prepare-release
    strategy:
      matrix:
        job:
          - os: ubuntu-latest
            platform: linux
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            platform: linux
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            platform: darwin
            target: x86_64-apple-darwin
          - os: macos-latest
            platform: darwin
            target: aarch64-apple-darwin
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          repository: fuellabs/forc-wallet

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.job.target }}
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true
          key: '${{ matrix.job.target }}'

      - name: Install cargo-edit
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-edit

      - name: Bump patch version and add nightly pre-release tag
        uses: actions-rs/cargo@v1
        with:
          command: set-version
          args: --metadata nightly.${{ inputs.date }}.${{ needs.prepare-release.outputs.commit_hash }}

      - name: Use Cross
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cross
          cache-key: '${{ matrix.job.target }}'

      - name: Build forc-wallet
        run: |
          cross build --profile=release --target ${{ matrix.job.target }} -p forc-wallet

      - name: Strip release binary x86_64-linux-gnu
        if: matrix.job.target == 'x86_64-unknown-linux-gnu'
        run: |
          strip "target/${{ matrix.job.target }}/release/forc-wallet"

      - name: Strip release binary aarch64-linux-gnu
        if: matrix.job.target == 'aarch64-unknown-linux-gnu'
        run: |
          docker run --rm -v \
          "$PWD/target:/target:Z" \
          ghcr.io/cross-rs/aarch64-unknown-linux-gnu:main \
          aarch64-linux-gnu-strip \
          /target/aarch64-unknown-linux-gnu/release/forc-wallet

      - name: Strip release binary mac
        if: matrix.job.os == 'macos-latest'
        run: |
          strip -x "target/${{ matrix.job.target }}/release/forc-wallet"

      - name: Prep Assets
        id: prep_assets
        run: |
          ARTIFACT="${{ needs.prepare-release.outputs.zip_name }}-${{ matrix.job.target }}"
          ZIP_FILE_NAME="$ARTIFACT.tar.gz"
          echo "ZIP_FILE_NAME=$ZIP_FILE_NAME" >> $GITHUB_ENV
          # create zip file
          mkdir -pv "$ARTIFACT"

          cp "target/${{ matrix.job.target }}/release/forc-wallet" "$ARTIFACT"

          tar -czvf $ZIP_FILE_NAME "$ARTIFACT"

      - name: Upload release archive
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          files:
            ${{ env.ZIP_FILE_NAME }}
          tag_name: ${{ steps.set-tag.outputs.tag }}